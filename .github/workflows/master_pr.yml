name: Master PRs

on:
  pull_request:
    branches: [master]  

jobs:
  check:
    runs-on: ubuntu-latest
    name: check

    outputs:
      format-failed: ${{ steps.format-check.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v4
      
      - uses: './.github/workflows/actions/setup-node-install-deps' 
          
      - name: Executar Check
        id: format-check
        run: pnpm check
        continue-on-error: true

      - name: Erro de formatação é ou lint
        if: steps.format-check.outcome  == 'failure'
        run: exit 1
    
  format:
    runs-on: ubuntu-latest
    needs: check
    if: failure()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - uses: './.github/workflows/actions/setup-node-install-deps'

      - uses:  './.github/workflows/actions/config-commit'
        
      - name: Atualizar branch antes de commitar
        run: |
          git fetch origin
          git rebase origin/${{ github.head_ref }}

      - name: Corrigir Formatação
        run: pnpm format:write
        
      - name: Fazer commit das alterações
        run: |
          git add .
          git commit -m "fix: aplicar formatação automática via CI" || echo "Nada para commitar"
          git push origin HEAD:${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  recheck:
    runs-on: ubuntu-latest
    name: recheck
    needs: format
    steps:
      - uses: actions/checkout@v4

      - uses: './.github/workflows/actions/setup-node-install-deps'

      - name: Executar Check
        run: pnpm check
      
  teste:
    runs-on: ubuntu-latest
    needs: [check, format]
    if: |
      needs.check.result == 'success' || needs.recheck.result == 'success'

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Node and Install Deps
        uses: './.github/workflows/actions/setup-node-install-deps' 
            
      # Run tests
      - name: Executar testes
        run: pnpm jest
      
